(require 'clojure.core.logic)
(load "rai_clojure/rai")
myappendo
(in-ns 'rai_clojure.rai)
myappendo
appendo
(require 'clojure.core.logic)
appendo
(in-ns 'rai_clojure.rai)
(load "rai_clojure/rai")
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(in-ns 'rai_clojure.rai)
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(in-ns 'rai_clojure.rai)
myappendo
appendo
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(in-ns 'rai_clojure.rai)
appendo
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(in-ns 'rai_clojure.rai)
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(in-ns 'rai-clojure.rai)
appendo
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(in-ns 'rai-clojure.rai)
appendo
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(in-ns 'rai-clojure.rai)
appendo
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(in-ns 'rai-clojure.rai)
appendo
(run 1 [q] (appendo [1 2] [3 4] q))
(run* [q] (appendo [1 2] [3 4] q))
(run* [x y] (appendo x y [1 2 3 4]))
(run* [x y] (myappendo x y [1 2 3 4]))
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(in-ns 'rai-clojure.rai)
(run 1 [q] (lookupo 3 [[1 2] [3 4] q))
(run 1 [q] (lookupo 3 [[1 2] [3 4]] q))
(run 1 [q] (lookupo 5 [[1 2] [3 4]] q))
(run 1 [q] (lookupo w [[w 2] [v 4]] q))
(run 1 [q] (lookupo 'w [[w 2] [v 4]] q))
(run 1 [q] (lookupo 'z [[w 2] [v 4]] q))
(run 1 [q] (lookupo 'z [['w 2] ['v 4]] q))
(run 1 [q] (lookupo 'v [['w 2] ['v 4]] q))
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(require 'clojure.core.logic)
(run 1 [e v] (evalo e v))
run
appendo
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(load "rai-clojure/rai")
(in-ns 'rai-clojure.rai)
(run 1 [e v] (evalo e v))
(run 2 [e v] (evalo e v))
(require 'clojure.core.logic)
(load "rai-clojure/rai")
(load "rai_clojure/rai")
(in-ns 'rai-clojure.rai)
(run 2 [e v] (evalo e v))
(run 3 [e v] (evalo e v))
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(in-ns 'rai-clojure.rai)
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(in-ns 'rai-clojure.rai)
(run 2 [e v] (evalo e v))
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(in-ns 'rai-clojure.rai)
(run 2 [e v] (evalo e v))
(run 10 [e v] (evalo e v))
(run 100 [e v] (evalo e v))
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(in-ns 'rai-clojure.rai)
(run 100 [e v] (evalo e v))
(in-ns 'rai-clojure.rai)
(load "rai_clojure/rai")
(require 'clojure.core.logic)
(load "rai_clojure/rai")
(in-ns 'rai-clojure.rai)
(run 100 [e v] (evalo e v))
(run 100 [e v] (fresh [rest] (conso 'if0 rest e)) (evalo e v))
(run 100 [e v] (fresh [rest] (conso 'times rest e)) (evalo e v))
(run 1000 [e v] (fresh [rest] (conso 'times rest e)) (evalo e v))
